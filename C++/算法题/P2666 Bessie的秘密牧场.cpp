#include<iostream>
#include <cmath>
using namespace std;    
int n,num;
void cao(int k,int s){
    if(k==4){
        if(s==n)num++;
    return ;}
    for(int i=0;i<=sqrt(n);i++)cao(k+1,s+i*i);

}
int main() {
  cin >> n;
  cao(0, 0);
  cout << num;
  return 0;
}
/*
题目背景

背景就是描述，描述就是背景。

题目描述

Farmmer John最近收割了几乎无限多块牧草，
将它们堆放在空地上。这些牧草都是正方形的，
而且都有非负整数长度的边长（当然有0）。一天
它的奶牛Bessie发现了这些美味的牧草，于是希望
把它们种在自己的秘密牧场上。他总将草皮分割成
1*1的小块，以放入他牧场上的N个格子中。

Bessie感兴趣的是，她若选取四块会有多少种不同
方法。如果N=4，那么她就有5种不同分发：(1,1,1,1)
,(2,0,0,0),(0,2,0,0),(0,0,2,0),(0,0,0,2)，括号内数表示边长。
注意这里不讲究顺序，如(1,2,3,4)与(4,3,2,1)是两种不同方法。

输入输出格式

输入格式：
仅一行，一个整数N。

输出格式：
同样为一行，包含一个整数，为方案总数。

输入输出样例

输入样例#1： 复制
4
输出样例#1： 复制
5
说明

对于100%的数据，1<=N<=10000。

好吧，一开始没看懂题目什么意思
这里做一下解释：
四个位置 每个位置的数平方和=n
求有多少种方案

鉴于完全平方数的特殊性，以及只有四个位置
可以通过枚举，直接统计出答案
另一个，就是搜索
不过搜索好像麻烦了点
一个剪枝：第四个位置可以由前三个位置推出来

值得注意的是 sqrt 的返回值是double

穷举
一开始没有赋f[0]=1；
结果就wa了
一定要好好初始化啊
*/