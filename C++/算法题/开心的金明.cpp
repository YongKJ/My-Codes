#include <iostream>
#include <cstring>
using namespace std;
int main(){
  int m, n;
  while(cin>>m>>n){
    int p[n + 1], q[n + 1], dp[n + 1][m + 1];
    memset(dp, 0, sizeof(dp));
    for (int i = 1; i <= n; i++) {
      cin >> p[i] >> q[i];
      for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
          if (j >= p[i])dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - p[i]] + p[i] * q[i]);
    }cout << dp[n][m] << endl;
  }return 0;
}
/*
题目描述

金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过NN元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的NN元。于是，他把每件物品规定了一个重要度，分为55等：用整数151−5表示，第55等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过NN元（可以等于NN元）的前提下，使每件物品的价格与重要度的乘积的总和最大。

设第jj件物品的价格为vjv 
[
​	 j]，重要度为wjw 
[
​	 j]，共选中了kk件物品，编号依次为j1j2jkj 
1
​	 ,j 
2
​	 ,…,j 
k
​	 ，则所求的总和为：

vj1wj1vj2wj2vjkwjkv 
[
​	 j 
1
​	 ]×w 
[
​	 j 
1
​	 ]+v 
[
​	 j 
2
​	 ]×w 
[
​	 j 
2
​	 ]+…+v 
[
​	 j 
k
​	 ]×w 
[
​	 j 
k
​	 ]。

请你帮助金明设计一个满足要求的购物单。

输入输出格式

输入格式：
第一行，为22个正整数，用一个空格隔开：NmNm（其中N30000N(<30000)表示总钱数，m25m(<25)为希望购买物品的个数。）

从第22行到第m1m+1行，第jj行给出了编号为j1j−1的物品的基本数据，每行有22个非负整数vpvp（其中vv表示该物品的价格v10000(v≤10000)，pp表示该物品的重要度(151−5)

输出格式：
11个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值100000000(<100000000)。

输入输出样例

输入样例#1： 复制
1000 5
800 2
400 5
300 5
400 3
200 2
输出样例#1： 复制
3900
*/