#include <iostream>
#include <cmath>
using namespace std;
void find(int n) {
  int flag = 0;
  while(n){
    cout << (flag ? "+2" : "2");
    for (int i=0;i<=15;i++)
       if(pow(2.0,i)>n){
          n -= pow(2.0, i - 1), flag = 1;
          if(i>3)cout << "(", find(i - 1), cout << ")";
          else {
            if (i - 1 == 0)cout << "(0)";
            if (i - 1 == 2)cout << "(2)";
          }break;
       }
  }
} 
int main(){
  int n;
  while (cin >> n) {
    find(n), cout << endl;
  }
  return 0;
}
/*
描述任何一个正整数都可以用2的幂次方表示。例如：
137=27+23+20

同时约定方次用括号来表示，即ab可表示为a(b)。
由此可知，137可表示为：

2(7)+2(3)+2(0)

进一步：7=22+2+20（21用2表示）

 3=2+20

所以最后137可表示为：

2(2(2)+2+2(0))+2(2+2(0))+2(0)

又如：

1315=210+28+25+2+1

所以1315最后可表示为:

2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)

 输入              一个正整数n（n≤20000）。  输出一行，
 符合约定的n的0，2表示（在表示中不能有空格）。
 

样例输入
137
 
样例输出
2(2(2)+2+2(0))+2(2+2(0))+2(0)
 
这道题最大的难点就是如何考虑输出的格式（加号和括号）
考虑了这两个问题后，就可以用递归自己调用自己来输出
*/