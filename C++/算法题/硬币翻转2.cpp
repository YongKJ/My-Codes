#include <iostream>
using namespace std;
int main(){
  int n;
  while(cin>>n){
    int s[101] = {0};
    cout << n << endl;
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n; j++)
        cout << (s[j] = j == i ? s[j] : s[j] ? 0 : 1);
      cout << endl;
    }
  }return 0;
}
/*
题目描述

在桌面上有一排硬币，共N枚，每一枚硬币均为
正面朝上。现在要把所有的硬币翻转成反面朝上，
规则是每次可翻转任意N−1枚硬币（正面向上的
被翻转为反面向上，反之亦然）。求一个最短的操
作序列（将每次翻转N-1枚硬币成为一次操作）。

输入输出格式

输入格式：
一个自然数N（N为不大于100100的偶数）。

输出格式：
第一行包含一个整数S，表示最少需要的操作次数。
接下来的S行每行分别表示每次操作后桌上硬币的
状态（一行包含N个整数（0或1），表示每个硬
币的状态：0――正面向上，和1――反面向上，不允
许出现多余空格）。

对于有多种操作方案的情况，则只需字典序最小输出一种。

输入输出样例

输入样例#1： 复制
4
输出样例#1： 复制
4
0111
1100
0001
1111
*/