#include <iostream>
using namespace std;
const int s[5] = {1, 3, 11, 15, 32};
int sum;
void dfs(int x){
  for (int i=0;i<5;i++)

int main(){
  int n, m;
  while (sum = 0, cin >> m>>n, m&&n) {
    dfs(1);
    cout << sum << endl;
  }
  return 0;
}
/*
描述

      G国发行了n种不同面值的邮票，并且规定每张信封上最多
      只允许贴m张邮票。连续邮资问题要求对于给定的n和m的
      值，给出邮票面值的最佳设计，使得可在1张信封上贴出从
      邮资1开始，增量为1的最大连续邮资区间。例如，当n=5和
      m=4时，面值为(1,3,11,15,32)的5种邮票可以贴出邮资的最
      大连续邮资区间是1到70。编程任务: 对于给定的正整数m和n，
      计算出邮票面值的最佳设计。
,
输入

       输入数据每一行给出2个正整数m和n的值（1<=n，m<=9），
       最后以0 0 表示文件结束。

输出

      对于输入中每一行的正整数m和n，将最大连续邮资区间输出。

样例输入

4 5
0 0

样例输出

70
*/