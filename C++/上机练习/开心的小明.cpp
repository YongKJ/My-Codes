#include<stdio.h>
#include<string.h>
#define MAX 35//最大支持的物品个数
#define MONEY 30000//最多可以用的钱数
int price[MAX];//每个物品的价格
int importent[MAX];//每个物品的重要程度
int c[MAX][MONEY];//存储用money钱数购买前i个物品可以得到的最大成绩
int totalmoney,totalnum;
int max(int a,int b)
{
	return a>b?a:b;
}
int main()
{
	int T;
	int i,j;
	
	scanf("%d",&T);
	while(T--)//测试数据个数
	{
		scanf("%d%d",&totalmoney,&totalnum);//总钱数和物品个数
		for(i = 1; i <= totalnum; i ++)
			scanf("%d %d",&price[i],&importent[i]);//读取每一个物品的价格和重要程度
		memset(c,0,sizeof(c));
                for (i = 1; i <= totalnum; i++) //遍历每个物品
                {
                  for (j = 0; j <= totalmoney; j++)
                    if (j <price[i]) //如果现有的钱小于当前要买的物品，说明无法购买，则计算前i-1个
                      c[i][j] = c[i - 1][j];
                    else //当前物品购买与不购买有两种情况，取其中的最大值
                      c[i][j] =max(c[i - 1][j - price[i]] + price[i] * importent[i],c[i - 1][j]);
                }
                printf("%d\n", c[totalnum][totalmoney]);
        }
        return 0;
}
/*
描述

      小明今天很开心，家里购置的新房就要领钥匙了，
      新房里有一间他自己专用的很宽敞的房间。更让
      他高兴的是，妈妈昨天对他说：“你的房间需要购
      买哪些物品，怎么布置，你说了算，只要不超过N
       元钱就行”。今天一早小明就开始做预算，但是他想
       买的东西太多了，肯定会超过妈妈限定的N 元。
       于是，他把每件物品规定了一个重要度，分为5 等：
       用整数1~5 表示，第5 等最重要。他还从因特网上查
       到了每件物品的价格（都是整数元）。他希望在不超
       过N 元（可以等于N 元）的前提下，使每件物品的价
       格与重要度的乘积的总和最大。设第j 件物品的价格
       为v[j]，重要度为w[j]，共选中了k 件物品，编号依次
       为j1...jk，则所求的总和为：v[j1]*w[j1]+..+v[jk]*w[jk]
       请你帮助金明设计一个满足要求的购物单.

输入

第一行输入一个整数N(0<N<=101)表示测试数据组数
每组测试数据输入的第1 行，为两个正整数，用一个空格隔开：
N m
（其中N（<30000）表示总钱数，m(<25)为希望购买物品的个数。）
从第2 行到第m+1 行，第j 行给出了编号为j-1
的物品的基本数据，每行有2 个非负整数
v p
（其中v 表示该物品的价格（v≤10000），p 表示该物品的重要度（1~5））

输出

每组测试数据输出只有一个正整数，为不超过总钱数的物品的价格与
重要度乘积的总和的
最大值（<100000000）

样例输入

1
1000 5
800 2
400 5
300 5
400 3
200 2

样例输出

3900

提示

0-1背包
*/